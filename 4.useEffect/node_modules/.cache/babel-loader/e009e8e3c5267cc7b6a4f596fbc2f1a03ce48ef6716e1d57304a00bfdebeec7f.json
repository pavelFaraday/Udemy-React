{"ast":null,"code":"var _jsxFileName = \"/Users/giorgiepitashvili/Documents/React/Udemy-React/4.useEffect/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const storedUserLoggedInInformation = localStorage.getItem(isLoogedIn);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoogedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Home","MainHeader","App","storedUserLoggedInInformation","localStorage","getItem","isLoogedIn","isLoggedIn","setIsLoggedIn","loginHandler","email","password","setItem","logoutHandler"],"sources":["/Users/giorgiepitashvili/Documents/React/Udemy-React/4.useEffect/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n\tconst storedUserLoggedInInformation = localStorage.getItem(isLoogedIn);\n\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tconst loginHandler = (email, password) => {\n\t\t// We should of course check email and password\n\t\t// But it's just a dummy/ demo anyways\n\t\tlocalStorage.setItem(\"isLoogedIn\", \"1\");\n\t\tsetIsLoggedIn(true);\n\t};\n\n\tconst logoutHandler = () => {\n\t\tsetIsLoggedIn(false);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n\t\t\t<main>\n\t\t\t\t{!isLoggedIn && <Login onLogin={loginHandler} />}\n\t\t\t\t{isLoggedIn && <Home onLogout={logoutHandler} />}\n\t\t\t</main>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC;AAE5D,SAASC,GAAG,GAAG;EAAA;EACd,MAAMC,6BAA6B,GAAGC,YAAY,CAACC,OAAO,CAACC,UAAU,CAAC;EAEtE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACzC;IACA;IACAP,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCJ,aAAa,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,aAAa,GAAG,MAAM;IAC3BL,aAAa,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACC,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACd,QAAC,UAAU;MAAC,eAAe,EAAED,UAAW;MAAC,QAAQ,EAAEM;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE;MAAA,WACE,CAACN,UAAU,iBAAI,QAAC,KAAK;QAAC,OAAO,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/CF,UAAU,iBAAI,QAAC,IAAI;QAAC,QAAQ,EAAEM;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAEnB;AAAC,GAzBQX,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}