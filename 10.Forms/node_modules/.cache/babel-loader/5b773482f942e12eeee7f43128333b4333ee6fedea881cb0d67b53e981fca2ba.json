{"ast":null,"code":"var _jsxFileName = \"/Users/giorgiepitashvili/Documents/React/Udemy-React/10.Forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\"; // true == infut fild is not empty\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched; // input is invalid ==> if $enteredNameIsValid is false (empty) && $enteredNameTouched is false (untouched)\n\n  useEffect(() => {}, [nameInputIsInvalid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must be not Empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"5vT777S/ZiJ1o4AjyUtAp2KcXt0=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["/Users/giorgiepitashvili/Documents/React/Udemy-React/10.Forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\tconst enteredNameIsValid = enteredName.trim() !== \"\"; // true == infut fild is not empty\n\tconst nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched; // input is invalid ==> if $enteredNameIsValid is false (empty) && $enteredNameTouched is false (untouched)\n\n\tuseEffect(() => {}, [nameInputIsInvalid]);\n\n\tconst nameInputChangeHandler = (event) => {\n\t\tsetEnteredName(event.target.value);\n\t};\n\n\tconst nameInputBlurHandler = (event) => {\n\t\tsetEnteredNameTouched(true);\n\t};\n\n\tconst formSubmissionHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetEnteredNameTouched(true);\n\n\t\tif (!enteredNameIsValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(enteredName);\n\t\tsetEnteredName(\"\");\n\t\tsetEnteredNameTouched(false);\n\t};\n\n\tconst nameInputClasses = nameInputIsInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\treturn (\n\t\t<form onSubmit={formSubmissionHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tonChange={nameInputChangeHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t\tonBlur={nameInputBlurHandler}\n\t\t\t\t/>\n\t\t\t\t{nameInputIsInvalid && (\n\t\t\t\t\t<p className=\"error-text\">Name must be not Empty!</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"form-actions\">\n\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACK,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMS,kBAAkB,GAAGN,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;EACtD,MAAMC,kBAAkB,GAAG,CAACF,kBAAkB,IAAIJ,kBAAkB,CAAC,CAAC;;EAEtEN,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACY,kBAAkB,CAAC,CAAC;EAEzC,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACzCT,cAAc,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACvCP,qBAAqB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMW,qBAAqB,GAAIJ,KAAK,IAAK;IACxCA,KAAK,CAACK,cAAc,EAAE;IACtBZ,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAI,CAACG,kBAAkB,EAAE;MACxB;IACD;IAEAU,OAAO,CAACC,GAAG,CAACjB,WAAW,CAAC;IACxBC,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMe,gBAAgB,GAAGV,kBAAkB,GACxC,sBAAsB,GACtB,cAAc;EACjB,oBACC;IAAM,QAAQ,EAAEM,qBAAsB;IAAA,wBACrC;MAAK,SAAS,EAAEI,gBAAiB;MAAA,wBAChC;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACC,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAET,sBAAuB;QACjC,KAAK,EAAET,WAAY;QACnB,MAAM,EAAEa;MAAqB;QAAA;QAAA;QAAA;MAAA,QAC5B,EACDL,kBAAkB,iBAClB;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA,QACjD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC5B;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET,CAAC;AAAC,GAtDIV,WAAW;AAAA,KAAXA,WAAW;AAwDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}